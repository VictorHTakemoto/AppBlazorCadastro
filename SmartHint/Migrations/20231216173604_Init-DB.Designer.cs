// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartHint.DAL.Model;
using SmartHint.Model;

#nullable disable

namespace SmartHint.Migrations
{
    [DbContext(typeof(smartHintDBContext))]
    [Migration("20231216173604_Init-DB")]
    partial class InitDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("SmartHint.Model.Entity.CustomerBase", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CustomerAccountData")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CustomerDocumentId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerEmail")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<int>("CustomerInfoId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<int>("CustomerPhone")
                        .HasColumnType("int");

                    b.Property<string>("CustomerType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("CustomerId");

                    b.HasIndex("CustomerDocumentId");

                    b.HasIndex("CustomerInfoId");

                    b.ToTable("CustomerBases");
                });

            modelBuilder.Entity("SmartHint.Model.Entity.CustomerDocument", b =>
                {
                    b.Property<int>("CustomerDocumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CustomerCNPJ")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CustomerCPF")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CutomerIE")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("CustomerDocumentId");

                    b.ToTable("CustomerDocuments");
                });

            modelBuilder.Entity("SmartHint.Model.Entity.CustomerInfo", b =>
                {
                    b.Property<int>("CustomerInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("CustomerBlocked")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("CustomerDateOfBirth")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CustomerDisclaimer")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CustomerGender")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CustomerPassword")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("CustomerInfoId");

                    b.ToTable("CustomerInfos");
                });

            modelBuilder.Entity("SmartHint.Model.Entity.CustomerBase", b =>
                {
                    b.HasOne("SmartHint.Model.Entity.CustomerDocument", "CustomerDocument")
                        .WithMany("Customers")
                        .HasForeignKey("CustomerDocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartHint.Model.Entity.CustomerInfo", "CustomerInfo")
                        .WithMany("Customers")
                        .HasForeignKey("CustomerInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CustomerDocument");

                    b.Navigation("CustomerInfo");
                });

            modelBuilder.Entity("SmartHint.Model.Entity.CustomerDocument", b =>
                {
                    b.Navigation("Customers");
                });

            modelBuilder.Entity("SmartHint.Model.Entity.CustomerInfo", b =>
                {
                    b.Navigation("Customers");
                });
#pragma warning restore 612, 618
        }
    }
}
